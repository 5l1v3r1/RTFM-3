[
  {
    "name": "sqlmap",
    "desc": "sqlmap is an open source penetration testing tool that automates the process of detecting and exploiting SQL injection flaws and taking over of database servers. It comes with a powerful detection engine, many niche features for the ultimate penetration tester and a broad range of switches lasting from database fingerprinting, over data fetching from the database, to accessing the underlying file system and executing commands on the operating system via out-of-band connections.\r\n\r\nFeatures:\r\nFull support for MySQL, Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, SQLite, Firebird, Sybase and SAP MaxDB database management systems.\r\nFull support for six SQL injection techniques: boolean-based blind, time-based blind, error-based, UNION query, stacked queries and out-of-band.\r\nSupport to directly connect to the database without passing via a SQL injection, by providing DBMS credentials, IP address, port and database name.\r\nSupport to enumerate users, password hashes, privileges, roles, databases, tables and columns.\r\nAutomatic recognition of password hash formats and support for cracking them using a dictionary-based attack.\r\nSupport to dump database tables entirely, a range of entries or specific columns as per user’s choice. The user can also choose to dump only a range of characters from each column’s entry.\r\nSupport to search for specific database names, specific tables across all databases or specific columns across all databases’ tables. This is useful, for instance, to identify tables containing custom application credentials where relevant columns’ names contain string like name and pass.\r\nSupport to download and upload any file from the database server underlying file system when the database software is MySQL, PostgreSQL or Microsoft SQL Server.\r\nSupport to execute arbitrary commands and retrieve their standard output on the database server underlying operating system when the database software is MySQL, PostgreSQL or Microsoft SQL Server.\r\nSupport to establish an out-of-band stateful TCP connection between the attacker machine and the database server underlying operating system. This channel can be an interactive command prompt, a Meterpreter session or a graphical user interface (VNC) session as per user’s choice.\r\nSupport for database process’ user privilege escalation via Metasploit’s Meterpreter getsystem command.",
    "example": "Attack the given URL (-u “http://192.168.1.250/?p=1&forumaction=search”) and extract the database names (–dbs):\r\nsqlmap -u \"http://192.168.1.250/?p=1&forumaction=search\" --dbs",
    "category": "4",
    "customInput": "URL of page to test=${arg1},Additional options (if you want to use tor type --tor)=${arg2},",
    "cmd": "sqlmap -u \"${arg1}\" --dbs ${arg2}",
    "parser": null
  },
  {
    "name": "burpsuite (GUI)",
    "desc": "",
    "example": "",
    "category": "4",
    "customInput": "",
    "cmd": "burpsuite",
    "parser": null
  },
  {
    "name": "commix (NOT DONE)",
    "desc": "Commix (short for [comm]and [i]njection e[x]ploiter) has a simple environment and it can be used, from web developers, penetration testers or even security researchers to test web applications with the view to find bugs, errors or vulnerabilities related to command injection attacks.",
    "example": "",
    "category": "2",
    "customInput": "",
    "cmd": "",
    "parser": null
  },
  {
    "name": "DotDotPwn",
    "desc": "It’s a very flexible intelligent fuzzer to discover traversal directory vulnerabilities in software such as HTTP/FTP/TFTP servers, Web platforms such as CMSs, ERPs, Blogs, etc.\r\n\r\nAlso, it has a protocol-independent module to send the desired payload to the host and port specified. On the other hand, it also could be used in a scripting way using the STDOUT module.\r\n\r\nIt’s written in perl programming language and can be run either under *NIX or Windows platforms. It’s the first Mexican tool included in BackTrack Linux (BT4 R2).\r\n\r\nFuzzing modules supported in this version:\r\nHTTP\r\nHTTP URL\r\nFTP\r\nTFTP\r\nPayload (Protocol independent)\r\nSTDOUT",
    "example": "Use the HTTP scan module (-m http) against a host (-h 192.168.1.1) , using the GET method (-M GET):\r\ndotdotpwn.pl -m http -h 192.168.1.1 -M GET\r\n\r\nDon't use this for HTTP, there is another version of this in the Web category.",
    "category": "2",
    "customInput": "Module(http, http-url, ftp, tftp, payload,stdout)=${arg1},",
    "cmd": "dotdotpwn.pl -m ${arg1} -h ${target}",
    "parser": null
  },
  {
    "name": "fimap-scan-inclusion",
    "desc": "fimap is a little python tool which can find, prepare, audit, exploit and even google automaticly for local and remote file inclusion bugs in webapps. fimap should be something like sqlmap just for LFI/RFI bugs instead of sql injection. It’s currently under heavy development but it’s usable.",
    "example": "Scan the web application (-u “http://192.168.1.202/index.php”) for file inclusion issues:\r\nfimap -u \"http://192.168.1.202/index.php\"",
    "category": "4",
    "customInput": "",
    "cmd": "fimap -u \"http://${target}\"",
    "parser": null
  },
  {
    "name": "GoLismero",
    "desc": "GoLismero is an open source framework for security testing. It’s currently geared towards web security, but it can easily be expanded to other kinds of scans.\r\n\r\nThe most interesting features of the framework are:\r\nReal platform independence. Tested on Windows, Linux, *BSD and OS X.\r\nNo native library dependencies. All of the framework has been written in pure Python.\r\nGood performance when compared with other frameworks written in Python and other scripting languages.\r\nVery easy to use.\r\nPlugin development is extremely simple.\r\nThe framework also collects and unifies the results of well known tools: sqlmap, xsser, openvas, dnsrecon, theharvester\r\nIntegration with standards: CWE, CVE and OWASP.\r\nDesigned for cluster deployment in mind (not available yet).",
    "example": "Run a vulnerability scan (scan) against the targets in the input file (-i /root/port80.xml), saving the output to a file (-o sub1-port80.html):\r\ngolismero scan -i /root/port80.xml -o sub1-port80.html",
    "category": "1",
    "customInput": null,
    "cmd": "golismero scan -i /root/port80.xml -o sub1-port80.html",
    "parser": null
  },
  {
    "name": "jSQL Injection (GUI)",
    "desc": "jSQL Injection is a lightweight application used to find database information from a distant server. jSQL Injection is free, open source and cross-platform (Windows, Linux, Mac OS X, Solaris).",
    "example": "",
    "category": "4",
    "customInput": "",
    "cmd": "jsql",
    "parser": null
  },
  {
    "name": "Nikto",
    "desc": "Nikto is an Open Source (GPL) web server scanner which performs comprehensive tests against web servers for multiple items, including over 6700 potentially dangerous files/programs, checks for outdated versions of over 1250 servers, and version specific problems on over 270 servers. It also checks for server configuration items such as the presence of multiple index files, HTTP server options, and will attempt to identify installed web servers and software. Scan items and plugins are frequently updated and can be automatically updated.",
    "example": "nikto -Display 1234EP -o report.html -Format htm -Tuning 123bde -host 192.168.0.102",
    "category": "4",
    "customInput": "",
    "cmd": "nikto -Display 1234EP -o ${working_dir}/intel/nikto.html -Format htm -Tuning 123bde -host ${target}",
    "parser": null
  },
  {
    "name": "PadBuster (NOT DONE)",
    "desc": "PadBuster is a Perl script for automating Padding Oracle Attacks. PadBuster provides the capability to decrypt arbitrary ciphertext, encrypt arbitrary plaintext, and perform automated response analysis to determine whether a request is vulnerable to padding oracle attacks.\r\n\r\nRead:\r\nhttps://pentesterlab.com/exercises/padding_oracle/course\r\n\r\nUse: padBuster.pl URL EncryptedSample BlockSize [options]",
    "example": "",
    "category": "4",
    "customInput": "",
    "cmd": "",
    "parser": null
  },
  {
    "name": "Vega (GUI)",
    "desc": "Vega is a free and open source scanner and testing platform to test the security of web applications. Vega can help you find and validate SQL Injection, Cross-Site Scripting (XSS), inadvertently disclosed sensitive information, and other vulnerabilities. It is written in Java, GUI based, and runs on Linux, OS X, and Windows.\r\n\r\nVega includes an automated scanner for quick tests and an intercepting proxy for tactical inspection. The Vega scanner finds XSS (cross-site scripting), SQL injection, and other vulnerabilities. Vega can be extended using a powerful API in the language of the web: Javascript.\r\n\r\nAutomated Crawler and Vulnerability Scanner\r\nConsistent UI\r\nWebsite Crawler\r\nIntercepting Proxy\r\nSSL MITM\r\nContent Analysis\r\nExtensibility through a Powerful Javascript Module API\r\nCustomizable alerts\r\nDatabase and Shared Data Model",
    "example": "",
    "category": "4",
    "customInput": "",
    "cmd": "vega",
    "parser": null
  },
  {
    "name": "WPScan",
    "desc": "WPScan is a black box WordPress vulnerability scanner that can be used to scan remote WordPress installations to find security issues.",
    "example": "Scan a target WordPress URL and enumerate any plugins that are installed:\r\nwpscan --url http://wordpress.local --enumerate p",
    "category": "4",
    "customInput": "",
    "cmd": "wpscan --url http://${target} --enumerate p",
    "parser": null
  },
  {
    "name": "Yasuo (NOT DONE)",
    "desc": "Yasuo is a ruby script that scans for vulnerable 3rd-party web applications. While working on a network security assessment (internal, external, redteam gigs etc.), we often come across vulnerable 3rd-party web applications or web front-ends that allow us to compromise the remote server by exploiting publicly known vulnerabilities. Some of the common & favorite applications are Apache Tomcat administrative interface, JBoss jmx-console, Hudson Jenkins and so on.",
    "example": "",
    "category": "2",
    "customInput": "",
    "cmd": "",
    "parser": null
  },
  {
    "name": "Zaproxy (NOT DONE)",
    "desc": "The OWASP Zed Attack Proxy (ZAP) is an easy to use integrated penetration testing tool for finding vulnerabilities in web applications. It is designed to be used by people with a wide range of security experience and as such is ideal for developers and functional testers who are new to penetration testing as well as being a useful addition to an experienced pen testers toolbox.",
    "example": "",
    "category": "2",
    "customInput": "",
    "cmd": "",
    "parser": null
  },
  {
    "name": "CMSmap (NOT DONE)",
    "desc": "CMSmap is a python open source CMS scanner that automates the process of detecting security flaws of the most popular CMSs. The main purpose of CMSmap is to integrate common vulnerabilities for different types of CMSs in a single tool.",
    "example": "",
    "category": "2",
    "customInput": "",
    "cmd": "",
    "parser": null
  },
  {
    "name": "droopescan (NOT DONE)",
    "desc": "A plugin-based scanner that aids security researchers in identifying issues with several CMS:\r\nDrupal.\r\nSilverStripe\r\nWordpress",
    "example": "",
    "category": "2",
    "customInput": "",
    "cmd": "",
    "parser": null
  },
  {
    "name": "OWASP Joomla (NOT DONE)",
    "desc": "Joomla! is probably the most widely-used CMS out there due to its flexibility, user-friendlinesss, extensibility to name a few.So, watching its vulnerabilities and adding such vulnerabilities as KB to Joomla scanner takes ongoing activity.It will help web developers and web masters to help identify possible security weaknesses on their deployed Joomla! sites. No web security scanner is dedicated only one CMS.",
    "example": "",
    "category": "2",
    "customInput": "",
    "cmd": "",
    "parser": null
  },
  {
    "name": "VBScan (NOT DONE)",
    "desc": "VBScan is an opensource project in perl programming language to detect VBulletin CMS vulnerabilities and analyses them .",
    "example": "",
    "category": "2",
    "customInput": "",
    "cmd": "",
    "parser": null
  },
  {
    "name": "DirBuster (GUI)",
    "desc": "DirBuster is a multi threaded java application designed to brute force directories and files names on web/application servers. Often is the case now of what looks like a web server in a state of default installation is actually not, and has pages and applications hidden within. DirBuster attempts to find these. However tools of this nature are often as only good as the directory and file list they come with. A different approach was taken to generating this. The list was generated from scratch, by crawling the Internet and collecting the directory and files that are actually used by developers! DirBuster comes a total of 9 different lists, this makes DirBuster extremely effective at finding those hidden files and directories. And if that was not enough DirBuster also has the option to perform a pure brute force, which leaves the hidden directories and files nowhere to hide.",
    "example": "",
    "category": "4",
    "customInput": "",
    "cmd": "dirbuster",
    "parser": null
  },
  {
    "name": "DNSRecon (NOT DONE)",
    "desc": "",
    "example": "",
    "category": "1",
    "customInput": null,
    "cmd": "",
    "parser": null
  },
  {
    "name": "Angry IP Scanner (NOT DONE)",
    "desc": "",
    "example": "",
    "category": "1",
    "customInput": null,
    "cmd": "",
    "parser": null
  },
  {
    "name": "Instarecon (NOT DONE)",
    "desc": "Automated basic digital reconnaissance. Great for getting an initial footprint of your targets and discovering additional subdomains. InstaRecon will do:\r\nDNS (direct, PTR, MX, NS) lookups\r\nWhois (domains and IP) lookups\r\nGoogle dorks in search of subdomains\r\nShodan lookups\r\nReverse DNS lookups on entire CIDRs",
    "example": "",
    "category": "1",
    "customInput": "",
    "cmd": "",
    "parser": null
  },
  {
    "name": "Nmap",
    "desc": "Targets may be specified as hostnames, IP addresses, networks, etc.\r\nEx: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.*.1-24",
    "example": "Scan in verbose mode (-v), enable OS detection, version detection, script scanning, and traceroute (-A), with version detection (-sV) against the target IP (192.168.1.1):\r\nnmap -v -A -sV 192.168.1.1",
    "category": "1",
    "customInput": "",
    "cmd": "nmap -v -A -sV ${target} ",
    "parser": null
  },
  {
    "name": "Nmap-all-http",
    "desc": "This will run all the HTTP scripts for Nmap, dude, this will take awhile.",
    "example": "cmd = 'nmap -script=http-* 192.168.159.139 -oX nmap_http_report.out",
    "category": "2",
    "customInput": "",
    "cmd": "nmap -script=http-* ${target} -oX ${working_dir}/nmap_http_report.out",
    "parser": null
  }
]